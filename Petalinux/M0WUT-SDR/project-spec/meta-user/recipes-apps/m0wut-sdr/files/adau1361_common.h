#ifndef ADAU1361_COMMON_H
#define ADAU1361_COMMON_H

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/mman.h>
#include <fcntl.h>
#include <stdint.h>
#include <stdbool.h>
#include <sys/ioctl.h>
#include <assert.h>
#include "iic.h"

#define ADAU1361_REG_CLOCK_CONTROL 0x4000
#define ADAU1361_REG_PLL_CONTROL 0x4002
#define ADAU1361_REG_JACK_DETECT 0x4008
#define ADAU1361_REG_REC_PWR_MGMT 0x4009
#define ADAU1361_REG_REC_MIXER_L0 0x400A
#define ADAU1361_REG_REC_MIXER_L1 0x400B
#define ADAU1361_REG_REC_MIXER_R0 0x400C
#define ADAU1361_REG_REC_MIXER_R1 0x400D
#define ADAU1361_REG_LEFT_DIFF_VOL 0x400E
#define ADAU1361_REG_RIGHT_DIFF_VOL 0x400F
#define ADAU1361_REG_REC_MIC_BIAS 0x4010
#define ADAU1361_REG_ALC0 0x4011
#define ADAU1361_REG_ALC1 0x4012
#define ADAU1361_REG_ALC2 0x4013
#define ADAU1361_REG_ALC3 0x4014
#define ADAU1361_REG_SERIAL_PORT0 0x4015
#define ADAU1361_REG_SERIAL_PORT1 0x4016
#define ADAU1361_REG_CONV0 0x4017
#define ADAU1361_REG_CONV1 0x4018
#define ADAU1361_REG_ADC_CTL 0x4019
#define ADAU1361_REG_LEFT_DIG_VOL 0x401A
#define ADAU1361_REG_RIGHT_DIG_VOL 0x401B
#define ADAU1361_REG_PLAY_MIXER_L0 0x401C
#define ADAU1361_REG_PLAY_MIXER_L1 0x401D
#define ADAU1361_REG_PLAY_MIXER_R0 0x401E
#define ADAU1361_REG_PLAY_MIXER_R1 0x401F
#define ADAU1361_REG_PLAY_LR_MIXER_LEFT 0x4020
#define ADAU1361_REG_PLAY_LR_MIXER_RIGHT 0x4021
#define ADAU1361_REG_PLAY_LR_MIXER_MONO 0x4022
#define ADAU1361_REG_HP_LEFT_VOL 0x4023
#define ADAU1361_REG_HP_RIGHT_VOL 0x4024
#define ADAU1361_REG_LINE_LEFT_VOL 0x4025
#define ADAU1361_REG_LINE_RIGHT_VOL 0x4026
#define ADAU1361_REG_MONO_OUTPUT 0x4027
#define ADAU1361_REG_POP_SUPRESS 0x4028
#define ADAU1361_REG_PLAY_PWR_MGMT 0x4029
#define ADAU1361_REG_DAC0 0x402A
#define ADAU1361_REG_DAC1 0x402B
#define ADAU1361_REG_DAC2 0x402C
#define ADAU1361_REG_SERIAL_PORT_PAD 0x402D
#define ADAU1361_REG_CONTROL_PORT_PAD0 0x402F
#define ADAU1361_REG_CONTROL_PORT_PAD1 0x4030
#define ADAU1361_REG_JACK_DETECT_PIN 0x4031
#define ADAU1361_REG_DEJITTER 0x4036

typedef enum {NORMAL, EXTREME_POWER_SAVING, POWER_SAVING, ENHANCED_PERFORMANCE} op_mode_t;
typedef enum {LEFT_CHANNEL, RIGHT_CHANNEL} channel_t;
typedef enum {INPUT_DISABLED, IN_P, IN_N, IN_DIFF, IN_AUX, DIGITAL_MICROPHONE} adc_input_t;
typedef enum {FALLING_EDGE, RISING_EDGE} clk_polarity_t;
typedef enum {LEFT_FIRST, RIGHT_FIRST} first_channel_t;
typedef enum {MSB_FIRST, LSB_FIRST} bit_order_t;
typedef enum {ENABLED, DISABLED} enabled_t;
typedef enum {MASTER, SLAVE} master_t;
typedef enum {CLOCK, PULSE} lrmod_t;
typedef enum {OUTPUT_DISABLED, LEFT_INPUT_MIXER, RIGHT_INPUT_MIXER, AUX, LEFT_DAC, RIGHT_DAC} output_source_t;
typedef enum {HEADPHONES, LINE_OUT, MONO} output_mode_t;

#endif // ADAU1361_COMMON_H
